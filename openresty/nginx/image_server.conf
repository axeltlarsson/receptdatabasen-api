location /images/upload {
  charset utf-8;
  default_type 'application/json';
  charset_types 'application/json';

  # ensure we are authenticated
  access_by_lua_file 'lua/session_authentication.lua';

  client_max_body_size 10M;
  client_body_buffer_size 10M;

  content_by_lua_file 'lua/image_upload.lua';
}

location @image_server {
  # serve_image.lua will never respond to client directly unless it fails with an error
  # if so, we want to respond with an error message in json, and not set content-type via
  # mime.types, as we do for the success case
  types {}
  charset utf-8;
  default_type 'application/json';
  charset_types 'application/json';
  content_by_lua_file 'lua/serve_image.lua';
}

location ~ ^/images/(?<sig>[^/]+)/(?<size>[^/]+)/(?<path>.*\.(?<ext>[a-z_]*))$ {
  # ensure we are authenticated
  access_by_lua_file 'lua/session_authentication.lua';
  set_by_lua_block $file_upload_path { return os.getenv("FILE_UPLOAD_PATH") }

  root $file_upload_path/cache;
  set_md5 $digest "$size/$path";
  try_files /$digest.$ext @image_server;
}

