# Recipe routes with rich link preview metadata - publicly accessible
location ~ ^/recipe/ {
    root html;
    
    # Render rich preview metadata for recipe pages
    access_by_lua_file 'lua/rich_link_preview.lua';
    
    # If the Lua code doesn't handle the request, serve the SPA
    try_files $uri /index.html;
}

# Internal endpoint for public data
# No authentication required, limited to read-only operations
location /internal/rest/public/ {
    # This location is only available through internal redirects
    internal;
    default_type application/json;
    
    # Standard proxy configuration to PostgREST
    proxy_set_header Accept-Encoding "";
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    set_by_lua_block $postgrest_host { return os.getenv('POSTGREST_HOST') or "0" }
    set_by_lua_block $postgrest_port { return os.getenv('POSTGREST_PORT') or "0" }

    # Note we're not passing any Authorization headers here - that ensures we are treated as "anonymous"
    proxy_pass http://$postgrest_host:$postgrest_port;
    
    # This needs to be at the end
    rewrite /internal/rest/public/(.+) /$1 break;
}

# Public image fallback location (similar to your @image_server)
location @public_image_server {
    # serve_public_image.lua will never respond to client directly unless it fails with an error
    # if so, we want to respond with an error message in json, and not set content-type via
    # mime.types, as we do for the success case
    types {}
    charset utf-8;
    default_type 'application/json';
    charset_types 'application/json';
    content_by_lua_file 'lua/serve_public_image.lua';
}

# Public image endpoint for link previews - NO authentication
location ~ ^/public-images/(?<size>[^/]+)/(?<path>.*\.(?<ext>[a-z_]*))$ {
    # Similar to private image endpoint but without authentication
    root /uploads/cache;
    set_md5 $digest "$size/$path";
    try_files /$digest.$ext @public_image_server;

    # Add cache control headers for public images
    add_header Cache-Control "public, max-age=2592000";
    add_header Vary "Accept-Encoding";
}

